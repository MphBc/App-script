function encryptAndReplaceData() {
  var key = "sampleSecretKey"; // Your secret key
  var sourceSheetName = "SourceSheet"; // Name of the source sheet
  var targetSheetName = "TargetSheet"; // Name of the target sheet
  var rangeAddress = "A1:B14"; // The range to encrypt (adjust as needed)

  // Access the sheets
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var sourceSheet = ss.getSheetByName(sourceSheetName);
  var targetSheet = ss.getSheetByName(targetSheetName);
  
  if (!sourceSheet || !targetSheet) {
    Logger.log("One or both sheets not found.");
    return;
  }
  
  // Get the data from the source range
  var data = sourceSheet.getRange(rangeAddress).getValues();

  // Initialize the cipher
  var cipher = new cCryptoGS.Cipher(key, 'aes');

  // Encrypt the data
  var encryptedData = data.map(row => row.map(value => cipher.encrypt(value.toString())));

  // Write the encrypted data to the target sheet
  targetSheet.getRange(1, 1, encryptedData.length, encryptedData[0].length).setValues(encryptedData);

  Logger.log("Data encrypted and replaced in the target sheet.");
}

function decryptData() {
  var key = "sampleSecretKey"; // Your secret key
  var sourceSheetName = "TargetSheet"; // Name of the sheet with encrypted data
  var targetSheetName = "DecryptedSheet"; // Name of the sheet for decrypted data
  var rangeAddress = "A1:B14"; // The range to decrypt (adjust as needed)

  // Access the sheets
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var sourceSheet = ss.getSheetByName(sourceSheetName);
  var targetSheet = ss.getSheetByName(targetSheetName);
  
  if (!sourceSheet || !targetSheet) {
    Logger.log("One or both sheets not found.");
    return;
  }
  
  // Get the encrypted data from the source range
  var encryptedData = sourceSheet.getRange(rangeAddress).getValues();

  // Initialize the cipher
  var cipher = new cCryptoGS.Cipher(key, 'aes');

  // Decrypt the data
  var decryptedData = encryptedData.map(row => row.map(value => cipher.decrypt(value.toString())));

  // Write the decrypted data to the target sheet
  targetSheet.getRange(1, 1, decryptedData.length, decryptedData[0].length).setValues(decryptedData);

  Logger.log("Data decrypted and written to the target sheet.");
}

